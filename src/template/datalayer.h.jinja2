#include <datalayerBase.h>

{% for enum in enums -%}
enum class {{ enum.name }} : {{ enum.type }}
{
{%- if enum.autoId%}
{%- for value in enum["values"] %}
    {{ value }},
{%- endfor %}
{%- else %}
{%- for value in enum["values"] | sort(attribute='value') %}
    {{ value.name }} = {{ value.value }},
{%- endfor %}
{%- endif %}
};

{% endfor %}

{%- for struct in structs %}
struct {{ struct.name }}
{
    {%- for parameter in struct.parameter | sort(attribute='name') %}
    {{ parameter.value }} {{ parameter.name }};
    {%- endfor %}
};
{%- endfor %}

{% for group in groups %}
constexpr DataLayer::GroupInfo<{{ group.baseId }}, "{{ group.name }}", DataLayer::Persistance::{{ group.persistence }}, Version<{{ group.version.major }}, {{ group.version.minor }}, {{ group.version.build }}>{}> {{ group.name }}Info;
{%- endfor %}

{%- set namespace_name = namespace(value="") %}
{% for dp in data_points|sort(attribute='name')|sort(attribute='namespace') %}
{%- if dp.namespace|length %}
{%- if dp.namespace != namespace_name.value %}
{%- set namespace_name.value = dp.namespace %}
namespace {{ dp.namespace }}
{
{%- endif %}
DataLayer::DataPoint<{{ dp.type }}, {{ dp.group }}Info, 0x{{ "%0x" | format( dp.id | int) }}, Helper::{{ dp.access }}, Version<{{ dp.version.major }}, {{ dp.version.minor }}, {{ dp.version.build }}>{}, "{{ dp.name }}"> {{ dp.name }}{% if 'default' in dp %}({% if dp.default is number %}{{ dp.default }}{% else %}{% for attr in dp.default.keys() | sort() %}.{{ attr }}={{ dp.default[attr] }}{% endfor %}{% endif %}){% endif %};
{%- if dp.namespace != namespace_name.value %}
{%- set namespace_name.value = dp.namespace %}
} // namespace {{ dp.namespace }}
{%- endif %}
{%- else %}
DataLayer::DataPoint<{{ dp.type }}, {{ dp.group }}Info, 0x{{ "%0x" | format( dp.id | int) }}, Helper::{{ dp.access }}, Version<{{ dp.version.major }}, {{ dp.version.minor }}, {{ dp.version.build }}>{}, "{{ dp.name }}"> {{ dp.name }}{% if 'default' in dp %}({% if dp.default is number %}{{ dp.default }}{% else %}{{ dp.type }}{ {%- for attr in dp.default.keys() | sort() %}.{{ attr }}={{ dp.default[attr] }}, {% endfor -%} }{% endif %}){% endif %};
{%- endif %}
{%- if namespace_name.value != "" and  loop.last %}
} // namespace {{ namespace_name.value }}
{%- endif %}
{%- endfor %}
{% for group in group_data_points_mapping %}
constexpr DataLayer::GroupDataPointMapping {{ group  }} { {{ group }}Info, {% for parameter in group_data_points_mapping[group] -%}
    {{ parameter }}{% if not loop.last %}, {% endif %}
    {%- endfor %} };
{%- endfor %}

constexpr DataLayer::Dispatcher Dispatcher { {% for group in group_data_points_mapping -%}
    {{ group }}{% if not loop.last %}, {% endif %}
{%- endfor %} };
